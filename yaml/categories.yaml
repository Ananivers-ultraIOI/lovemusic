---
openapi: 3.0.0
info:
  title: LoveMusic Category
  description: |
    This is category request sample for LoveMusic API
  termsOfService: http://swagger.io/terms/
  contact:
    email: kouptchinskya@proton.me
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://virtserver.swaggerhub.com/KOUPTCHINSKYNG/test/1.0.1
  description: SwaggerHub API Auto Mocking
- url: https://petstore.swagger.io/v2
tags:
- name: categories
  description: Operations about category
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
paths:
  /categories:
    get:
      tags:
      - categories
      summary: Get all categories
      operationId: getAllCategories
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categories'
    post:
      tags:
      - categories
      summary: Add a category to the store
      operationId: addCategory
      requestBody:
        $ref: '#/components/requestBodies/CategoriesForCreation'
      responses:
        "200":
          description: Category added
        "405":
          description: Invalid input
  /categories/{categoryId}:
    get:
      tags:
      - categories
      summary: Find category by ID
      description: Returns a single category
      operationId: getCategoryById
      parameters:
      - name: categoryId
        in: path
        description: ID of category to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
        "400":
          description: Invalid ID supplied
        "404":
          description: Category not found
    delete:
      tags:
      - categories
      summary: Deletes a category
      operationId: deleteCategory
      parameters:
      - name: categoryId
        in: path
        description: Category id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Success
        "400":
          description: Invalid ID supplied
        "404":
          description: Category not found
components:
  schemas:
    Categories:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: rock
    CategoriesForCreation:
      type: object
      properties:
        name:
          type: string
          example: rock
  requestBodies:
    CategoriesForCreation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesForCreation'
